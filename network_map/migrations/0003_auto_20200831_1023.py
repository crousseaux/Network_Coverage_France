# Generated by Django 3.1 on 2020-08-31 10:23

import pandas as pd
from django.db import migrations


def create_city_provider_network(apps, schema_editor):
    connector_df = pd.read_csv('data/city_provider_network.csv')
    Provider = apps.get_model('network_map', 'Provider')
    Network = apps.get_model('network_map', 'Network')
    City = apps.get_model('network_map', 'City')
    Connector = apps.get_model('network_map', 'NetworkProviderCityConnector')

    if not connector_df.empty:
        new_connectors = []
        # Fetching now so we don't fetch it later
        network_2g = Network.objects.get(name='2G')
        network_3g = Network.objects.get(name='3G')
        network_4g = Network.objects.get(name='4G')
        # This will be used to keep track of providers already queried so we don't query them several times
        code_to_provider = {}
        for index, row in connector_df.iterrows():
            operator_in_row = row.Operateur
            current_provider = code_to_provider[operator_in_row] if operator_in_row in code_to_provider else Provider.objects.get(code=row.Operateur)
            if operator_in_row in code_to_provider:
                code_to_provider[operator_in_row] = Provider
            current_city = City.objects.get(name=row.city)
            if row['2G']:
                new_connector = Connector(city=current_city,
                                          network=network_2g,
                                          provider=current_provider)
                new_connectors.append(new_connector)
            if row['3G']:
                new_connector = Connector(city=current_city,
                                          network=network_3g,
                                          provider=current_provider)
                new_connectors.append(new_connector)
            if row['4G']:
                new_connector = Connector(city=current_city,
                                          network=network_4g,
                                          provider=current_provider)
                new_connectors.append(new_connector)
        Connector.objects.bulk_create(new_connectors, ignore_conflicts=True)


class Migration(migrations.Migration):
    dependencies = [
        ('network_map', '0002_auto_20200831_0736'),
    ]

    operations = [
        migrations.RunPython(create_city_provider_network),

    ]
